TW3

#include<stdio.h>
#include<sys/types.h>
#include<fcntl.h>
#include<unistd.h>
//#include<iostream>
//using namespace std;

int main(int argc, char *argv[])
{
	char temp[1000];
	setbuf(stdout,temp);
	struct flock fvar;
	int fdesc;
	char buf;
	int rc;
	off_t offset;
	pid_t pid=fork();
	fdesc=open(argv[1],O_RDWR);
	fvar.l_type=F_WRLCK;
	fvar.l_whence=SEEK_END;
	fvar.l_start=-100;
	fvar.l_len=100;
	if(fcntl(fdesc,F_SETLK,&fvar)==-1)
{

		printf("\n..........................\n");
		printf("Unable to getlock as file has been locked by: \n");

		while(fcntl(fdesc,F_GETLK,&fvar)!=-1&&fvar.l_type!=F_UNLCK)
		{

			printf("\n File: %s is locked by the process with pid: %u",argv[1],fvar.l_pid);
			printf("From %ld the byte in the file for %ld", fvar.l_start,fvar.l_len);
			printf("Number of bytes , for %s\n\n",(fvar.l_type==F_WRLCK ? "write":"read"));
			if(!fvar.l_len)break;
			fvar.l_start+=fvar.l_len;
			fvar.l_len=0;
		}
	}
	else{
		printf("\n...........................\n");
		printf("\n\n File: %s was not locked and aquiring of Exclusive lock was",argv[1]);
		printf("Successful by process ID: %u \n",getpid());
		offset=lseek(fdesc,-50,SEEK_END);
		printf("\n\n Last 50 bytes of the file: %s\n",argv[1]);

		while((rc=read(fdesc,&buf,1))>0)
			printf("%c",buf);
		fvar.l_type=F_UNLCK;
		fvar.l_whence=SEEK_END;
		fvar.l_start=-100;
		fvar.l_len=100;
		if(fcntl(fdesc,F_SETLKW,&fvar)!=-1)
			printf("\n File unclocked successfully\n\n");

	}

	return 0;

}

///////////////////////////////////////////////////////////////////////////////////
Termwork 3:
*make sure input.txt is in same folder and has contents over 100 bytes*
>gedit tw3.c
*write your code here* and exit the editor once done
>gcc tw3.c -o tw3
./tw3 input.txt

open another terminal while file is locked and try to access this file using same command mentioned above
if the terminal says cannot access, file is locked. then the code is working properly
